{"name":"Short pencil for long memory.","tagline":"Notes #01--构建内核源码树","body":"archlx.github.io\r\n================\r\n要编写Linux的驱动，必须要构建内核源码树。\r\n\r\n内核源码树的作用是构造可以在Linux内核中装载和卸载的模块，因此若是要为目标板构造模块，必须保证用于构建内核源码树的内核版本需得与你的目标板中内核版本一致。笔者使用的目标板为i.MX6Q E9，官方给出的源码包linux_E9_3.0.35_for_Linux_v3.0.tar.bz2。\r\n\r\n01. 解压源码包  \r\n`tar jxvf linux_E9_3.0.35_for_Linux_v3.0.tar.bz2`\r\n\r\n02. 进入内核源码目录  \r\n`cd ~/linux_E9_3.0.35_for_Linux`\r\n\r\n03. 修改内核源码根目录下Makefile、指定架构、交叉编译器  \r\nARCH            = arm  \r\nCROSS_COMPILE   = /opt/arm-linux-gcc/bin/arm-none-linux-gnueabi-    \r\n注意行末不能有空格\r\n\r\n04. 配置内核  \r\n`make menuconfig`  \r\n直接载入源码中官方配置即可\r\n\r\n05. 编译   \r\n`make`\r\n\r\n06. 编译模块   \r\n`make modules`\r\n\r\n07. 安装模块   \r\n`make modules_install`\r\n\r\n08. 完成后可在/lib/modules目录下看到以版本号命名的文件夹       \r\n[xxx@XXX ~]$ `cd /lib/modules`   \r\n[xxx@XXX modules]$ `ls`    \r\n3.0.35  3.16.2-1-ARCH  3.16.3-1-ARCH  extramodules-3.16-ARCH`   \r\n[xxx@XXX modules]$ \r\n\r\n至此即完成了内核源码树的构建\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}